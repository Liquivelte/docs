import{_ as e,c as t,o as i,a}from"./app.cda77f0c.js";const r="/liquid.png",s="/svelte.png",o="/liquivelte.png",g=JSON.parse('{"title":"Liquid +  Svelte =  Liquivelte","description":"","frontmatter":{},"headers":[],"relativePath":"index.md"}'),l={name:"index.md"},n=a('<h1 id="liquid-svelte-liquivelte" tabindex="-1"><img src="'+r+'" width="50" style="display:inline;vertical-align:bottom;"> Liquid + <img src="'+s+'" width="50" style="display:inline;vertical-align:bottom;"> Svelte = <img src="'+o+'" width="50" style="display:inline;vertical-align:bottom;"> Liquivelte <a class="header-anchor" href="#liquid-svelte-liquivelte" aria-hidden="true">#</a></h1><p>Liquivelte is a way to use <a href="https://svelte.dev/" target="_blank" rel="noreferrer">Svelte</a> in <a href="https://shopify.dev/docs/themes" target="_blank" rel="noreferrer">Shopify theme development</a>. It has a <a href="https://marketplace.visualstudio.com/items?itemName=malipetek.liquivelte" target="_blank" rel="noreferrer">VSCode extension</a> that carries out a build process and outputs Liquid + JS and CSS.</p><p>Basic idea behind it is, <a href="https://shopify.github.io/liquid/tags/control-flow/" target="_blank" rel="noreferrer">liquid control flow tags</a> are very similar to <a href="https://svelte.dev/docs#template-syntax" target="_blank" rel="noreferrer">Svelte&#39;s</a>. So in theory we ca convert one to another.</p><p>VSCode extension at its core is a <a href="https://github.com/sveltejs/svelte-preprocess" target="_blank" rel="noreferrer">svelte preprocessor</a> that converts liquid template to valid Svelte before compilation. But it is a bit tricky, that is why this project is a VSCode extension rather than a rollup/webpack package.</p><p>Using this project requires both Liquid and Svelte knowledge.</p>',5),d=[n];function p(c,h,_,u,v,m){return i(),t("div",null,d)}const S=e(l,[["render",p]]);export{g as __pageData,S as default};
